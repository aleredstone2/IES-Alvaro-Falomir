{"ast":null,"code":"var _jsxFileName = \"/home/alea/Escritorio/java-ide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(`import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Introduce un número: \");\n        int numero = scanner.nextInt();\n        \n        int resultado = numero * 2;\n        System.out.println(\"El número introducido multiplicado por 2 es: \" + resultado);\n        \n        scanner.close();\n    }\n}`);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const runCode = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/run', {\n        code\n      });\n      setOutput(response.data);\n      setIsRunning(true);\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n  const sendInput = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/input', {\n        input\n      });\n      setInput('');\n      // Optionally, you can fetch the new output after sending input\n      // const newOutput = await axios.get('http://localhost:5000/output');\n      // setOutput(prev => prev + newOutput.data);\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MonacoEditor, {\n      height: \"70vh\",\n      language: \"java\",\n      value: code,\n      onChange: setCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Introduce el valor de entrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendInput,\n      children: \"Send Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Mh8GngJ0i49WTv7yt8GiE5dcs8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MonacoEditor","axios","jsxDEV","_jsxDEV","App","_s","code","setCode","input","setInput","output","setOutput","isRunning","setIsRunning","runCode","response","post","data","error","message","sendInput","className","children","height","language","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/alea/Escritorio/java-ide/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport axios from 'axios';\n\nfunction App() {\n  const [code, setCode] = useState(`import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Introduce un número: \");\n        int numero = scanner.nextInt();\n        \n        int resultado = numero * 2;\n        System.out.println(\"El número introducido multiplicado por 2 es: \" + resultado);\n        \n        scanner.close();\n    }\n}`);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n\n  const runCode = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/run', { code });\n      setOutput(response.data);\n      setIsRunning(true);\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n\n  const sendInput = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/input', { input });\n      setInput('');\n      // Optionally, you can fetch the new output after sending input\n      // const newOutput = await axios.get('http://localhost:5000/output');\n      // setOutput(prev => prev + newOutput.data);\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <MonacoEditor\n        height=\"70vh\"\n        language=\"java\"\n        value={code}\n        onChange={setCode}\n      />\n      <button onClick={runCode}>Run</button>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Introduce el valor de entrada\"\n      />\n      <button onClick={sendInput}>Send Input</button>\n      <pre>{output}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;EACD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,2BAA2B,EAAE;QAAEV;MAAK,CAAC,CAAC;MACxEK,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;MACxBJ,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdP,SAAS,CAACO,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IACjE;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,6BAA6B,EAAE;QAAER;MAAM,CAAC,CAAC;MAC3EC,QAAQ,CAAC,EAAE,CAAC;MACZ;MACA;MACA;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdP,SAAS,CAACO,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IACjE;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,YAAY;MACXuB,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAC,MAAM;MACfC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAEnB;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEjB,OAAQ;MAAAQ,QAAA,EAAC;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtC3B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXP,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAGO,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE;MAC1CU,WAAW,EAAC;IAA+B;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEX,SAAU;MAAAE,QAAA,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C3B,OAAA;MAAAmB,QAAA,EAAMZ;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACzB,EAAA,CA7DQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}