{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale A\\\\Desktop\\\\java-ide\\\\src\\\\components\\\\SQLiteManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport initSqlJs from 'sql.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SQLiteManager = () => {\n  _s();\n  const [db, setDb] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [dbInitialized, setDbInitialized] = useState(false);\n\n  // Inicializar la base de datos SQLite\n  const initDb = async () => {\n    try {\n      // Importar sql.js y localizar el archivo wasm\n      const SQL = await initSqlJs({\n        locateFile: file => `${process.env.PUBLIC_URL}/sql-wasm.wasm` // O usar la URL del CDN\n      });\n      const database = new SQL.Database();\n      setDb(database);\n      setDbInitialized(true);\n      console.log(\"Base de datos SQLite inicializada.\");\n    } catch (e) {\n      console.error(\"Error al inicializar SQLite:\", e);\n      setError(\"Error al inicializar SQLite: \" + e.message);\n    }\n  };\n\n  // Ejecutar consulta SQL\n  const executeQuery = () => {\n    if (db) {\n      try {\n        const res = db.exec(query);\n        setResult(res);\n        setError(null);\n      } catch (e) {\n        setError(e.message);\n        setResult(null);\n      }\n    }\n  };\n\n  // Renderizar los resultados de la consulta\n  const renderResult = () => {\n    if (!result || result.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        border: '1px solid black',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: result[0].columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid black',\n              padding: '8px'\n            },\n            children: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: result[0].values.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((val, valIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid black',\n              padding: '8px'\n            },\n            children: val\n          }, valIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gestor de SQLite en React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: initDb,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: dbInitialized ? 'green' : '#007BFF',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        marginBottom: '20px'\n      },\n      disabled: dbInitialized,\n      children: dbInitialized ? 'Base de Datos Inicializada' : 'Inicializar Base de Datos'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), dbInitialized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"50\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Escribe tu consulta SQL aqu\\xED...\",\n          style: {\n            width: '100%',\n            padding: '10px',\n            marginBottom: '10px',\n            borderRadius: '5px',\n            border: '1px solid #ccc',\n            fontFamily: 'monospace',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeQuery,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Ejecutar Consulta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderResult()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(SQLiteManager, \"ehNRtDQWBQ79BuqYnFpm+AG2H5E=\");\n_c = SQLiteManager;\nexport default SQLiteManager;\nvar _c;\n$RefreshReg$(_c, \"SQLiteManager\");","map":{"version":3,"names":["React","useState","initSqlJs","jsxDEV","_jsxDEV","Fragment","_Fragment","SQLiteManager","_s","db","setDb","query","setQuery","result","setResult","error","setError","dbInitialized","setDbInitialized","initDb","SQL","locateFile","file","process","env","PUBLIC_URL","database","Database","console","log","e","message","executeQuery","res","exec","renderResult","length","style","width","border","marginTop","children","columns","map","col","index","padding","fileName","_jsxFileName","lineNumber","columnNumber","values","row","rowIndex","val","valIndex","fontFamily","onClick","backgroundColor","color","borderRadius","cursor","marginBottom","disabled","rows","cols","value","onChange","target","placeholder","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Ale A/Desktop/java-ide/src/components/SQLiteManager.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport initSqlJs from 'sql.js';\r\n\r\nconst SQLiteManager = () => {\r\n  const [db, setDb] = useState(null);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [dbInitialized, setDbInitialized] = useState(false);\r\n\r\n  // Inicializar la base de datos SQLite\r\n  const initDb = async () => {\r\n    try {\r\n      // Importar sql.js y localizar el archivo wasm\r\n      const SQL = await initSqlJs({\r\n        locateFile: file => `${process.env.PUBLIC_URL}/sql-wasm.wasm` // O usar la URL del CDN\r\n      });\r\n      const database = new SQL.Database();\r\n      setDb(database);\r\n      setDbInitialized(true);\r\n      console.log(\"Base de datos SQLite inicializada.\");\r\n    } catch (e) {\r\n      console.error(\"Error al inicializar SQLite:\", e);\r\n      setError(\"Error al inicializar SQLite: \" + e.message);\r\n    }\r\n  };\r\n\r\n  // Ejecutar consulta SQL\r\n  const executeQuery = () => {\r\n    if (db) {\r\n      try {\r\n        const res = db.exec(query);\r\n        setResult(res);\r\n        setError(null);\r\n      } catch (e) {\r\n        setError(e.message);\r\n        setResult(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renderizar los resultados de la consulta\r\n  const renderResult = () => {\r\n    if (!result || result.length === 0) return null;\r\n\r\n    return (\r\n      <table style={{ width: '100%', border: '1px solid black', marginTop: '20px' }}>\r\n        <thead>\r\n          <tr>\r\n            {result[0].columns.map((col, index) => (\r\n              <th key={index} style={{ border: '1px solid black', padding: '8px' }}>{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {result[0].values.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {row.map((val, valIndex) => (\r\n                <td key={valIndex} style={{ border: '1px solid black', padding: '8px' }}>{val}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h2>Gestor de SQLite en React</h2>\r\n\r\n      {/* Bot√≥n para inicializar la base de datos */}\r\n      <button \r\n        onClick={initDb} \r\n        style={{\r\n          padding: '10px 20px',\r\n          backgroundColor: dbInitialized ? 'green' : '#007BFF',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer',\r\n          marginBottom: '20px',\r\n        }}\r\n        disabled={dbInitialized}\r\n      >\r\n        {dbInitialized ? 'Base de Datos Inicializada' : 'Inicializar Base de Datos'}\r\n      </button>\r\n\r\n      {/* Mostrar el cuadro de texto solo si la base de datos est√° inicializada */}\r\n      {dbInitialized && (\r\n        <>\r\n          <div>\r\n            <textarea\r\n              rows=\"5\"\r\n              cols=\"50\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Escribe tu consulta SQL aqu√≠...\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                borderRadius: '5px',\r\n                border: '1px solid #ccc',\r\n                fontFamily: 'monospace',\r\n                fontSize: '16px',\r\n              }}\r\n            />\r\n            <br />\r\n            <button\r\n              onClick={executeQuery}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#28a745',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              Ejecutar Consulta\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Mostrar error si hay alguno */}\r\n      {error && <p style={{ color: 'red', marginTop: '20px' }}>Error: {error}</p>}\r\n\r\n      {/* Mostrar los resultados de la consulta */}\r\n      <div>{renderResult()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SQLiteManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}