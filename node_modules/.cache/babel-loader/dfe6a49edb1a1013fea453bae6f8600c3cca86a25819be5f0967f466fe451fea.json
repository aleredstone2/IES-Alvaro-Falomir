{"ast":null,"code":"var _jsxFileName = \"/home/alea/Escritorio/java-ide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(`import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Introduce la cantidad de números a ingresar: \");\n        int n = scanner.nextInt();\n        \n        int[] numeros = new int[n];\n        \n        System.out.println(\"Introduce los \" + n + \" números:\");\n        for (int i = 0; i < n; i++) {\n            numeros[i] = scanner.nextInt();\n        }\n        \n        System.out.println(\"Números ingresados en orden inverso:\");\n        for (int i = n - 1; i >= 0; i--) {\n            System.out.println(numeros[i]);\n        }\n        \n        scanner.close();\n    }\n}`);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:5000/run');\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.output) {\n        setOutput(prevOutput => prevOutput + data.output);\n      }\n      if (data.error) {\n        setOutput(prevOutput => prevOutput + data.error);\n      }\n      if (data.status === 'finished') {\n        setIsRunning(false);\n      }\n    };\n    setSocket(ws);\n    return () => ws.close();\n  }, []);\n  const runCode = () => {\n    if (socket) {\n      setOutput('');\n      setIsRunning(true);\n      socket.send(JSON.stringify({\n        code: code\n      }));\n    }\n  };\n  const sendInput = () => {\n    if (socket && isRunning) {\n      socket.send(inputRef.current.value);\n      setInput('');\n      inputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MonacoEditor, {\n      height: \"50vh\",\n      language: \"java\",\n      value: code,\n      onChange: setCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runCode,\n      disabled: isRunning,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        disabled: !isRunning,\n        placeholder: \"Introduce el valor de entrada\",\n        rows: \"5\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendInput,\n        disabled: !isRunning,\n        children: \"Send Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uGPxHl/m6LLg0EoSnu2Y1aeHLRc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MonacoEditor","jsxDEV","_jsxDEV","App","_s","code","setCode","input","setInput","output","setOutput","socket","setSocket","isRunning","setIsRunning","inputRef","ws","WebSocket","onmessage","event","data","JSON","parse","prevOutput","error","status","close","runCode","send","stringify","sendInput","current","value","className","children","height","language","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["/home/alea/Escritorio/java-ide/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\n\nfunction App() {\n  const [code, setCode] = useState(`import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Introduce la cantidad de números a ingresar: \");\n        int n = scanner.nextInt();\n        \n        int[] numeros = new int[n];\n        \n        System.out.println(\"Introduce los \" + n + \" números:\");\n        for (int i = 0; i < n; i++) {\n            numeros[i] = scanner.nextInt();\n        }\n        \n        System.out.println(\"Números ingresados en orden inverso:\");\n        for (int i = n - 1; i >= 0; i--) {\n            System.out.println(numeros[i]);\n        }\n        \n        scanner.close();\n    }\n}`);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:5000/run');\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.output) {\n        setOutput((prevOutput) => prevOutput + data.output);\n      }\n      if (data.error) {\n        setOutput((prevOutput) => prevOutput + data.error);\n      }\n      if (data.status === 'finished') {\n        setIsRunning(false);\n      }\n    };\n    setSocket(ws);\n    return () => ws.close();\n  }, []);\n\n  const runCode = () => {\n    if (socket) {\n      setOutput('');\n      setIsRunning(true);\n      socket.send(JSON.stringify({ code: code }));\n    }\n  };\n\n  const sendInput = () => {\n    if (socket && isRunning) {\n      socket.send(inputRef.current.value);\n      setInput('');\n      inputRef.current.value = '';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <MonacoEditor\n        height=\"50vh\"\n        language=\"java\"\n        value={code}\n        onChange={setCode}\n      />\n      <button onClick={runCode} disabled={isRunning}>Run</button>\n      <div>\n        <textarea\n          ref={inputRef}\n          disabled={!isRunning}\n          placeholder=\"Introduce el valor de entrada\"\n          rows=\"5\"\n          cols=\"50\"\n        />\n        <button onClick={sendInput} disabled={!isRunning}>Send Input</button>\n      </div>\n      <pre>{output}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}