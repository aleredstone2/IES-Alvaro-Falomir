{"ast":null,"code":"var _jsxFileName = \"/home/alea/Escritorio/java-ide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(`import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Introduce un número: \");\n        int numero = scanner.nextInt();\n        \n        int resultado = numero * 2;\n        System.out.println(\"El número introducido multiplicado por 2 es: \" + resultado);\n        \n        scanner.close();\n    }\n}`);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const runCode = async () => {\n    try {\n      const response = await axios.post('/run', {\n        code\n      });\n      setOutput('');\n      setIsRunning(true);\n\n      // Start polling for output\n      pollOutput();\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n  const sendInput = async () => {\n    try {\n      await axios.post('/input', {\n        input\n      });\n      setInput('');\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n  const pollOutput = async () => {\n    if (!isRunning) return;\n    try {\n      const response = await axios.get('/output');\n      if (response.data) {\n        setOutput(prev => prev + response.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    setTimeout(pollOutput, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MonacoEditor, {\n      height: \"70vh\",\n      language: \"java\",\n      value: code,\n      onChange: setCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Introduce el valor de entrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendInput,\n      children: \"Send Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Mh8GngJ0i49WTv7yt8GiE5dcs8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MonacoEditor","axios","jsxDEV","_jsxDEV","App","_s","code","setCode","input","setInput","output","setOutput","isRunning","setIsRunning","runCode","response","post","pollOutput","error","data","message","sendInput","get","prev","console","setTimeout","className","children","height","language","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/alea/Escritorio/java-ide/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport axios from 'axios';\n\nfunction App() {\n  const [code, setCode] = useState(`import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Introduce un número: \");\n        int numero = scanner.nextInt();\n        \n        int resultado = numero * 2;\n        System.out.println(\"El número introducido multiplicado por 2 es: \" + resultado);\n        \n        scanner.close();\n    }\n}`);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n\n  const runCode = async () => {\n    try {\n      const response = await axios.post('/run', { code });\n      setOutput('');\n      setIsRunning(true);\n\n      // Start polling for output\n      pollOutput();\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n\n  const sendInput = async () => {\n    try {\n      await axios.post('/input', { input });\n      setInput('');\n    } catch (error) {\n      setOutput(error.response ? error.response.data : error.message);\n    }\n  };\n\n  const pollOutput = async () => {\n    if (!isRunning) return;\n\n    try {\n      const response = await axios.get('/output');\n      if (response.data) {\n        setOutput((prev) => prev + response.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n\n    setTimeout(pollOutput, 1000);\n  };\n\n  return (\n    <div className=\"App\">\n      <MonacoEditor\n        height=\"70vh\"\n        language=\"java\"\n        value={code}\n        onChange={setCode}\n      />\n      <button onClick={runCode}>Run</button>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Introduce el valor de entrada\"\n      />\n      <button onClick={sendInput}>Send Input</button>\n      <pre>{output}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}