{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale A\\\\Desktop\\\\java-ide\\\\src\\\\components\\\\SQLiteManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SQLiteManager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SQLiteManager = () => {\n  _s();\n  const [db, setDb] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Inicializar la base de datos SQLite de manera dinámica\n  const initDb = async () => {\n    try {\n      const SQL = await import(\"sql.js\"); // Importar dinámicamente sql.js\n      const database = new SQL.Database(); // Crear una base de datos en memoria\n      setDb(database);\n      console.log(\"Base de datos SQLite inicializada.\");\n    } catch (e) {\n      console.error(\"Error al inicializar SQLite:\", e);\n    }\n  };\n\n  // Ejecutar consulta SQL\n  const executeQuery = () => {\n    if (db) {\n      try {\n        const res = db.exec(query); // Ejecutar la consulta\n        setResult(res);\n        setError(null);\n      } catch (e) {\n        setError(e.message);\n        setResult(null);\n      }\n    }\n  };\n\n  // Renderizar los resultados de la consulta\n  const renderResult = () => {\n    if (!result || result.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: result[0].columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: result[0].values.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((val, valIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, valIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gestor de SQLite en React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: initDb,\n      children: \"Inicializar Base de Datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"50\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Escribe tu consulta SQL aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: executeQuery,\n        children: \"Ejecutar Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderResult()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SQLiteManager, \"E5iEnoCH/VrT3vba575f3J1SL1o=\");\n_c = SQLiteManager;\nexport default SQLiteManager;\nvar _c;\n$RefreshReg$(_c, \"SQLiteManager\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SQLiteManager","_s","db","setDb","query","setQuery","result","setResult","error","setError","initDb","SQL","database","Database","console","log","e","executeQuery","res","exec","message","renderResult","length","children","columns","map","col","index","fileName","_jsxFileName","lineNumber","columnNumber","values","row","rowIndex","val","valIndex","onClick","rows","cols","value","onChange","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Ale A/Desktop/java-ide/src/components/SQLiteManager.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SQLiteManager.css\";\r\n\r\n\r\nconst SQLiteManager = () => {\r\n  const [db, setDb] = useState(null);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Inicializar la base de datos SQLite de manera dinámica\r\n  const initDb = async () => {\r\n    try {\r\n      const SQL = await import(\"sql.js\"); // Importar dinámicamente sql.js\r\n      const database = new SQL.Database(); // Crear una base de datos en memoria\r\n      setDb(database);\r\n      console.log(\"Base de datos SQLite inicializada.\");\r\n    } catch (e) {\r\n      console.error(\"Error al inicializar SQLite:\", e);\r\n    }\r\n  };\r\n\r\n  // Ejecutar consulta SQL\r\n  const executeQuery = () => {\r\n    if (db) {\r\n      try {\r\n        const res = db.exec(query); // Ejecutar la consulta\r\n        setResult(res);\r\n        setError(null);\r\n      } catch (e) {\r\n        setError(e.message);\r\n        setResult(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renderizar los resultados de la consulta\r\n  const renderResult = () => {\r\n    if (!result || result.length === 0) return null;\r\n\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {result[0].columns.map((col, index) => (\r\n              <th key={index}>{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {result[0].values.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {row.map((val, valIndex) => (\r\n                <td key={valIndex}>{val}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gestor de SQLite en React</h2>\r\n      <button onClick={initDb}>Inicializar Base de Datos</button>\r\n\r\n      <div>\r\n        <textarea\r\n          rows=\"5\"\r\n          cols=\"50\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Escribe tu consulta SQL aquí...\"\r\n        />\r\n        <br />\r\n        <button onClick={executeQuery}>Ejecutar Consulta</button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\r\n\r\n      <div>{renderResult()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SQLiteManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}